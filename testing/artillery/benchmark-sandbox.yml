config:
  target: 'http://127.0.0.1:3000'
  http:
    timeout: 120
    pool: 200
    maxSockets: 600
  phases:
    # Gentle warm-up to get RPC caches and signer pool ready
    - duration: 60
      arrivalRate: 5
      rampTo: 25
      name: "Priming Warm-up (0-60s)"

    # Hold a low plateau to stabilise connections and storage checks
    - duration: 60
      arrivalRate: 25
      name: "Stabilise at 25 TPS (60-120s)"

    # Progressive ramp towards the higher throughput zone
    - duration: 150
      arrivalRate: 20
      rampTo: 70
      name: "Ramp to 70 TPS (120-270s)"

    # Plateau just below target to verify near-sustained throughput before the push
    - duration: 120
      arrivalRate: 70
      name: "Plateau 70 TPS (270-390s)"

    # Final ramp to the sustained 90 TPS target
    - duration: 90
      arrivalRate: 70
      rampTo: 90
      name: "Ramp to 90 TPS (390-480s)"

    # SUSTAINED LOAD: 10 MINUTES @ 90 TPS (critical validation window)
    - duration: 600
      arrivalRate: 90
      name: "Sustain 90 TPS - 10 Minutes (480-1080s)"

    # Gentle cool-down to avoid abrupt RPC teardown
    - duration: 60
      arrivalRate: 60
      rampTo: 10
      name: "Cool-down (1080-1140s)"

  variables:
    receiverId:
      - "user1.test.near"
      - "user2.test.near"
      - "user3.test.near"
      - "user4.test.near"
      - "user5.test.near"
      - "alice.test.near"
      - "bob.test.near"
      - "charlie.test.near"
    
    amount:
      - "1000000000000000000000000"   # 1 token (18 decimals)
      - "5000000000000000000000000"   # 5 tokens
      - "10000000000000000000000000"  # 10 tokens
      - "100000000000000000000000"    # 0.1 token

scenarios:
  # Primary scenario: Single FT transfer (most common use case)
  - name: "Single FT Transfer"
    weight: 80
    flow:
      - post:
          url: "/send-ft"
          headers:
            Content-Type: "application/json"
          json:
            receiverId: "{{ receiverId }}"
            amount: "{{ amount }}"
            memo: "100TPS-10min benchmark - {{ $timestamp }}"
          expect:
            - statusCode: 200
            - json:
                success: true

  # Secondary scenario: Batched transfers (efficiency test)
  - name: "Batched FT Transfers (2x)"
    weight: 15
    flow:
      - post:
          url: "/send-ft"
          headers:
            Content-Type: "application/json"
          json:
            transfers:
              - receiverId: "{{ receiverId }}"
                amount: "{{ amount }}"
                memo: "Batch A"
              - receiverId: "{{ receiverId }}"
                amount: "{{ amount }}"
                memo: "Batch B"
          expect:
            - statusCode: 200
            - json:
                success: true

  # Monitoring: Health checks
  - name: "Health Check"
    weight: 5
    flow:
      - get:
          url: "/health"
          expect:
            - statusCode: 200
            - contentType: json

# Performance assertions
ensure:
  maxErrorRate: 5              # Max 5% error rate
  p95: 5000                    # 95th percentile response time < 5s
  p99: 10000                   # 99th percentile response time < 10s
