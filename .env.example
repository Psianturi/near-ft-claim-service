
# === NEAR Environment Configuration Template ===
# Copy this file to .env (for sandbox) or .env.testnet (for testnet)
# Fill in your account details for each environment

# =============================================================================
# SANDBOX CONFIGURATION (Local Development)
# =============================================================================

# Environment
NEAR_ENV=sandbox

# Master Account (sandbox signer)
MASTER_ACCOUNT=service.test.near
MASTER_ACCOUNT_PRIVATE_KEY=ed25519:your-sandbox-private-key
# Multiple keys for high throughput (minimum 5 keys recommended for 30+ TPS)
MASTER_ACCOUNT_PRIVATE_KEYS=ed25519:key1,ed25519:key2,ed25519:key3,ed25519:key4,ed25519:key5
SANDBOX_MAX_IN_FLIGHT_PER_KEY=6

# FT Contract (deployed for sandbox)
FT_CONTRACT=service.test.near

# RPC Configuration (local sandbox)
NODE_URL=http://127.0.0.1:3030
PORT=3000

# =============================================================================
# TESTNET CONFIGURATION (Production Testing)
# =============================================================================

# Environment
NEAR_ENV=testnet

# Master Account (your testnet account with FT contract)
MASTER_ACCOUNT=your-account.testnet
MASTER_ACCOUNT_PRIVATE_KEY=ed25519:your-testnet-private-key
MASTER_ACCOUNT_PRIVATE_KEYS=ed25519:key1,ed25519:key2,ed25519:key3,ed25519:key4,ed25519:key5

# FT Contract (deployed NEP-141 FT contract on testnet)
FT_CONTRACT=your-ft-contract.testnet

# RPC Configuration (testnet with FastNEAR for performance)
NODE_URL=https://rpc.testnet.near.org
RPC_URLS=https://rpc.testnet.near.org,https://rpc.testnet.fastnear.com/?apiKey=YOUR_FASTNEAR_API_KEY
FASTNEAR_API_KEY=YOUR_FASTNEAR_API_KEY

# =============================================================================
# COMMON SETTINGS (Apply to both environments)
# =============================================================================

# API Configuration
PORT=3000

# Service Performance Settings - Optimized for 30+ TPS
SKIP_STORAGE_CHECK=true
STORAGE_MIN_DEPOSIT=1250000000000000000000

# Concurrency & Connection Pool
CONCURRENCY_LIMIT=600           # Maximum concurrent requests
MAX_IN_FLIGHT=200               # Maximum in-flight transactions
WORKER_COUNT=8                  # Number of worker processes

# Throttle Settings
MAX_TX_PER_SECOND=50            # Global throttle (adjust for your target)
GLOBAL_THROTTLE_WINDOW_SEC=1    # Window for global throttle
MAX_TX_PER_KEY_PER_SECOND=10    # Per-key throttle (adjust for your key pool)
PER_KEY_THROTTLE_WINDOW_SEC=1   # Window for per-key throttle

# Key Pool Configuration
SANDBOX_MAX_IN_FLIGHT_PER_KEY=6    # Concurrent tx per sandbox key
TESTNET_MAX_IN_FLIGHT_PER_KEY=8    # Concurrent tx per testnet key
MAX_IN_FLIGHT_PER_KEY=8            # Fallback for any environment

# Transaction Finality
WAIT_UNTIL=Included

# Batch Processing
BATCH_SIZE=50                   # Batch size for request processing
QUEUE_SIZE=25000               # Maximum queue size

# Server Configuration
SERVER_TIMEOUT_MS=120000       # 2 minutes
REQUEST_TIMEOUT_MS=120000      # 2 minutes

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# For Sandbox (Local Development):
# 1. Copy this file to .env
# 2. Start near-sandbox (or use near-ft-helper for automated setup)
# 3. Generate multiple keys for high throughput:
#    - Use near account add-key or let near-ft-helper generate them
#    - Minimum 5 keys recommended for 100+ TPS target
# 4. Bootstrap receivers and pre-register storage:
#    node ci/bootstrap-sandbox-accounts.mjs
# 5. Run API + Worker: npm run start:sandbox & npm run run:worker:sandbox
# 6. Load test: ./testing/artillery/run-artillery-test.sh sandbox

# For Testnet (Production Testing):
# 1. Copy this file to .env.testnet
# 2. Choose setup method:
#    **Option A - Automated (Recommended for clean testing):**
#    ```bash
#    # Use dedicated benchmark account (isolated from dev deployments)
#    node scripts/testnet-setup/create-benchmark-account.mjs
#    node scripts/testnet-setup/deploy-ft-to-benchmark.mjs
#    node scripts/testnet-setup/generate-full-access-keys.mjs 7
#    # Update .env.testnet with generated keys
#    ```
#    **Option B - Manual (Use your own account):**
#    ```bash
#    # Use existing account with near-ft-helper
#    cd ../near-ft-helper && node deploy-testnet.js
#    # Generate keys: near account add-key <your-account.testnet> --allowanceGrant
#    ```
# 3. Fund account with sufficient NEAR for gas fees
# 4. Run: npm run start:testnet
# 5. Load test: ./testing/artillery/run-artillery-test.sh testnet
#
# ðŸ“š **Detailed setup guide**: [scripts/testnet-setup/README.md](scripts/testnet-setup/README.md)

# Performance Tips:
# - Use SKIP_STORAGE_CHECK=true and pre-register all receivers
# - Increase key count for higher TPS (5 keys = 150 TPS capacity)
# - Monitor nonce conflicts; increase MAX_IN_FLIGHT_PER_KEY if needed
# - Use WAIT_UNTIL=Included for maximum speed (Included > ExecutedOptimistic > Final)
# - WAIT_UNTIL=None is no longer supported by the NEAR client shim

# Security Note:
# - Never commit private keys to version control
# - Use environment-specific configurations
# - Testnet requires real NEAR tokens for gas fees