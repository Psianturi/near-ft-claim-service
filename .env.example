# === NEAR Environment Configuration Template ===
# Copy this file to .env (for sandbox) or .env.testnet (for testnet)
# Then customize with your account details

# =============================================================================
# SANDBOX CONFIGURATION (Local Development)
# =============================================================================

# Environment
NEAR_ENV=sandbox

# Master Account (shared sandbox signer for this project)
MASTER_ACCOUNT=service.test.near
MASTER_ACCOUNT_PRIVATE_KEY=ed25519:4o4Q6FRGGGVAmZVzywvqyiZMmCVaQxQ8WEwBNWaGJ6Yy
MASTER_ACCOUNT_PRIVATE_KEYS=ed25519:4o4Q6FRGGGVAmZVzywvqyiZMmCVaQxQ8WEwBNWaGJ6Yy,ed25519:A8K3RyCt67FtKhGQt1awzHiALiQWRTRUMn5rsrtAADgJ,ed25519:GLGmJHj9tRfMbmmFfEiNQd5KVnBb8i9RkJzaMf955797
# Limit concurrent tx per sandbox key (avoids InvalidNonce storms)
SANDBOX_MAX_IN_FLIGHT_PER_KEY=4


# FT Contract (deployed for the shared sandbox account)
FT_CONTRACT=service.test.near

# RPC Configuration (local sandbox)
NODE_URL=http://127.0.0.1:3030
PORT=3000

# =============================================================================
# TESTNET CONFIGURATION (Production Testing)
# =============================================================================

# Environment
# NEAR_ENV=testnet

# Master Account (your testnet account with FT contract)
# Replace with your actual testnet account details
# MASTER_ACCOUNT=your-account.testnet
# MASTER_ACCOUNT_PRIVATE_KEY=ed25519:your-private-key-here
# MASTER_ACCOUNT_PRIVATE_KEYS=ed25519:your-primary-key,ed25519:your-secondary-key

# FT Contract (deployed NEP-141 FT contract on testnet)
# FT_CONTRACT=your-ft-contract.testnet

# RPC Configuration (testnet with FastNEAR for performance)
# NODE_URL=https://rpc.testnet.near.org
# RPC_URLS=https://rpc.testnet.near.org,https://rpc.testnet.fastnear.com/?apiKey=YOUR_FASTNEAR_API_KEY
# FASTNEAR_API_KEY=YOUR_FASTNEAR_API_KEY

# =============================================================================
# COMMON SETTINGS (Apply to both environments)
# =============================================================================

# API Configuration
# PORT=3000

# Service Performance Settings
SKIP_STORAGE_CHECK=true
STORAGE_MIN_DEPOSIT=1250000000000000000000
CONCURRENCY_LIMIT=400
MAX_IN_FLIGHT=150
WORKER_COUNT=5
MAX_TX_PER_SECOND=120
GLOBAL_THROTTLE_WINDOW_SEC=1
MAX_TX_PER_KEY_PER_SECOND=6
PER_KEY_THROTTLE_WINDOW_SEC=1
TESTNET_MAX_IN_FLIGHT_PER_KEY=4
WAIT_UNTIL=Included

# =============================================================================
# SETUP INSTRUCTIONS
# =============================================================================

# For Sandbox (Local Development):
# 1. Copy this file to .env
# 2. Start the node: npx near-sandbox init && npx near-sandbox run
# 3. Optional: if you need to recreate the signer, see README ยง3.2; otherwise the default `service.test.near` keys above are ready to use on any machine.
# 4. Optional: generate more keys with near account add-key service.test.near ... --networkId sandbox and append to MASTER_ACCOUNT_PRIVATE_KEYS
# 5. Bootstrap receivers:
#    node ci/bootstrap-sandbox-accounts.mjs
#    # or manually:
#    near account create user1.service.test.near --useFunder service.test.near --initialBalance 5 --networkId sandbox --nodeUrl http://127.0.0.1:3030
#    near call $FT_CONTRACT storage_deposit '{"account_id":"user1.service.test.near"}' --amount 0.00125 --accountId service.test.near --networkId sandbox --nodeUrl http://127.0.0.1:3030
# 6. Run: npm run start:sandbox & npm run run:worker:sandbox
# 7. Load test: ./testing/artillery/run-artillery-test.sh sandbox

# For Testnet (Production Testing):
# 1. Copy this file to .env.testnet
# 2. Uncomment and customize testnet configuration above
# 3. Replace placeholder values with your actual testnet account
# 4. Generate any additional keys via "near generate-key" / "near account add-key"
# 5. Run: npm run start:testnet
# 6. Load test: ./testing/artillery/run-artillery-test.sh testnet

# Security Note:
# - Never commit private keys to version control
# - Use environment-specific configurations
# - Testnet requires real NEAR tokens for gas fees